{"ast":null,"code":"import { Router } from '@angular/router';\nimport { HarcodedAuthenticationService } from '../service/harcoded-authentication.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/harcoded-authentication.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    // Router\n    constructor(router, hardcodedAuthenticationService) {\n      this.router = router;\n      this.hardcodedAuthenticationService = hardcodedAuthenticationService;\n      this.username = 'jhonny';\n      this.password = 'dummy';\n      this.errorMessage = 'Invalid Credentials';\n      this.invalidLogin = false;\n    }\n    ngOnInit() {}\n    handleLogin() {\n      console.log(this.username);\n      if (this.hardcodedAuthenticationService.authenticate(this.username, this.password)) {\n        this.invalidLogin = false;\n        this.router.navigate(['welcome', this.username]);\n      } else {\n        this.invalidLogin = true;\n      }\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HarcodedAuthenticationService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 11,\n      vars: 5,\n      consts: [[1, \"container\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"username\", 3, \"ngModelChange\", \"value\", \"ngModel\"], [\"type\", \"password\", \"name\", \"password\", 3, \"ngModelChange\", \"value\", \"ngModel\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"alert\", \"alert-warning\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\");\n          i0.ɵɵtext(1, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0);\n          i0.ɵɵtemplate(3, LoginComponent_div_3_Template, 2, 1, \"div\", 1);\n          i0.ɵɵelementStart(4, \"div\");\n          i0.ɵɵtext(5, \" user Name : \");\n          i0.ɵɵelementStart(6, \"input\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(7, \" Password: \");\n          i0.ɵɵelementStart(8, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_9_listener() {\n            return ctx.handleLogin();\n          });\n          i0.ɵɵtext(10, \"Login\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.invalidLogin);\n          i0.ɵɵadvance(3);\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.username);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(2);\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.password);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n        }\n      },\n      dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}